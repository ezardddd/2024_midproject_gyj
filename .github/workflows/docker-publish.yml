name: Build and Push to Amazon ECR

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AWS_REGION: ap-southeast-1  
  ECR_REPOSITORY_FRONTEND: mid2-frontend
  ECR_REPOSITORY_BACKEND: mid2-backend

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get image tags
        id: image-tags
        run: |
          VERSION=$(echo ${{ github.sha }} | cut -c1-8)
          echo "FRONTEND_TAG=${VERSION}-frontend" >> $GITHUB_OUTPUT
          echo "BACKEND_TAG=${VERSION}-backend" >> $GITHUB_OUTPUT

      # Frontend
      - name: Build, tag, and push frontend image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY_FRONTEND }}
          IMAGE_TAG: ${{ steps.image-tags.outputs.FRONTEND_TAG }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./Frontend
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # Backend
      - name: Build, tag, and push backend image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY_BACKEND }}
          IMAGE_TAG: ${{ steps.image-tags.outputs.BACKEND_TAG }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./Backend
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v2

      - name: Checkout kustomize repository
        uses: actions/checkout@v2
        with:
          repository: ezardddd/mid2-manifest-repo
          ref: main
          token: ${{ secrets.ACTION_TOKEN }}
          path: mid2-manifest-repo

      - name: Update Kubernetes resources
        run: |
          cd mid2-manifest-repo/overlays/dev/
          kustomize edit set image ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_FRONTEND }}=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_FRONTEND }}:${{ steps.image-tags.outputs.FRONTEND_TAG }}
          kustomize edit set image ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_BACKEND }}=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_BACKEND }}:${{ steps.image-tags.outputs.BACKEND_TAG }}
          cat kustomization.yaml

      - name: Commit files
        run: |
          cd mid2-manifest-repo
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"
          git add .
          git diff --staged --quiet || git commit -m "Update image tags"
          git push -u origin main